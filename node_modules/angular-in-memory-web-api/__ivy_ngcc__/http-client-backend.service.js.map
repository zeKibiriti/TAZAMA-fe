{"version":3,"sources":["D:/PROJECTS/TAZAMA/oprt-fe/node_modules/angular-in-memory-web-api/http-client-backend.service.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2CAyG2C,AAEpC;;;;;;;;;;;;;;+DAI0B","file":"http-client-backend.service.js","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { HttpHeaders, HttpParams, HttpResponse, HttpXhrBackend, XhrFactory } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { STATUS } from './http-status-codes';\nimport { InMemoryBackendConfig, InMemoryBackendConfigArgs, InMemoryDbService } from './interfaces';\nimport { BackendService } from './backend.service';\n/**\n * For Angular `HttpClient` simulate the behavior of a RESTy web api\n * backed by the simple in-memory data store provided by the injected `InMemoryDbService`.\n * Conforms mostly to behavior described here:\n * http://www.restapitutorial.com/lessons/httpmethods.html\n *\n * ### Usage\n *\n * Create an in-memory data store class that implements `InMemoryDbService`.\n * Call `config` static method with this service class and optional configuration object:\n * ```\n * // other imports\n * import { HttpClientModule } from '@angular/common/http';\n * import { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\n *\n * import { InMemHeroService, inMemConfig } from '../api/in-memory-hero.service';\n * @NgModule({\n *  imports: [\n *    HttpModule,\n *    HttpClientInMemoryWebApiModule.forRoot(InMemHeroService, inMemConfig),\n *    ...\n *  ],\n *  ...\n * })\n * export class AppModule { ... }\n * ```\n */\nvar HttpClientBackendService = /** @class */ (function (_super) {\n    __extends(HttpClientBackendService, _super);\n    function HttpClientBackendService(inMemDbService, config, xhrFactory) {\n        var _this = _super.call(this, inMemDbService, config) || this;\n        _this.xhrFactory = xhrFactory;\n        return _this;\n    }\n    HttpClientBackendService.prototype.handle = function (req) {\n        try {\n            return this.handleRequest(req);\n        }\n        catch (error) {\n            var err = error.message || error;\n            var resOptions_1 = this.createErrorResponseOptions(req.url, STATUS.INTERNAL_SERVER_ERROR, \"\" + err);\n            return this.createResponse$(function () { return resOptions_1; });\n        }\n    };\n    ////  protected overrides /////\n    HttpClientBackendService.prototype.getJsonBody = function (req) {\n        return req.body;\n    };\n    HttpClientBackendService.prototype.getRequestMethod = function (req) {\n        return (req.method || 'get').toLowerCase();\n    };\n    HttpClientBackendService.prototype.createHeaders = function (headers) {\n        return new HttpHeaders(headers);\n    };\n    HttpClientBackendService.prototype.createQueryMap = function (search) {\n        var map = new Map();\n        if (search) {\n            var params_1 = new HttpParams({ fromString: search });\n            params_1.keys().forEach(function (p) { return map.set(p, params_1.getAll(p)); });\n        }\n        return map;\n    };\n    HttpClientBackendService.prototype.createResponse$fromResponseOptions$ = function (resOptions$) {\n        return resOptions$.pipe(map(function (opts) { return new HttpResponse(opts); }));\n    };\n    HttpClientBackendService.prototype.createPassThruBackend = function () {\n        try {\n            return new HttpXhrBackend(this.xhrFactory);\n        }\n        catch (ex) {\n            ex.message = 'Cannot create passThru404 backend; ' + (ex.message || '');\n            throw ex;\n        }\n    };\n    HttpClientBackendService = __decorate([\n        Injectable(),\n        __param(1, Inject(InMemoryBackendConfig)), __param(1, Optional()),\n        __metadata(\"design:paramtypes\", [InMemoryDbService,\n            InMemoryBackendConfigArgs,\n            XhrFactory])\n    ], HttpClientBackendService);\n    return HttpClientBackendService;\n}(BackendService));\nexport { HttpClientBackendService };\n"]}