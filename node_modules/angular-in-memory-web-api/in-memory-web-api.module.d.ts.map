{"version":3,"file":"in-memory-web-api.module.d.ts","sources":["D:/PROJECTS/TAZAMA/oprt-fe/node_modules/angular-in-memory-web-api/in-memory-web-api.module.d.ts"],"sourcesContent":["import { ModuleWithProviders, Type } from '@angular/core';\nimport { InMemoryBackendConfigArgs, InMemoryDbService } from './interfaces';\nexport declare class InMemoryWebApiModule {\n    /**\n    *  Redirect BOTH Angular `Http` and `HttpClient` XHR calls\n    *  to in-memory data store that implements `InMemoryDbService`.\n    *  with class that implements InMemoryDbService and creates an in-memory database.\n    *\n    *  Usually imported in the root application module.\n    *  Can import in a lazy feature module too, which will shadow modules loaded earlier\n    *\n    * @param {Type} dbCreator - Class that creates seed data for in-memory database. Must implement InMemoryDbService.\n    * @param {InMemoryBackendConfigArgs} [options]\n    *\n    * @example\n    * InMemoryWebApiModule.forRoot(dbCreator);\n    * InMemoryWebApiModule.forRoot(dbCreator, {useValue: {delay:600}});\n    */\n    static forRoot(dbCreator: Type<InMemoryDbService>, options?: InMemoryBackendConfigArgs): ModuleWithProviders;\n    /**\n     *\n     * Enable and configure the in-memory web api in a lazy-loaded feature module.\n     * Same as `forRoot`.\n     * This is a feel-good method so you can follow the Angular style guide for lazy-loaded modules.\n     */\n    static forFeature(dbCreator: Type<InMemoryDbService>, options?: InMemoryBackendConfigArgs): ModuleWithProviders;\n}\n"],"names":[],"mappings":"AAAA;;;AAEA;;;;;;;;;;;;;;;;6FAgB6F,yCAAmB;;;;;;;;;;AAQhH;"}