{"version":3,"file":"http-client-backend.service.d.ts","sources":["D:/PROJECTS/TAZAMA/oprt-fe/node_modules/angular-in-memory-web-api/http-client-backend.service.d.ts"],"sourcesContent":["import { HttpBackend, HttpEvent, HttpHeaders, HttpRequest, HttpResponse, HttpXhrBackend, XhrFactory } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { InMemoryBackendConfigArgs, InMemoryDbService, ResponseOptions } from './interfaces';\nimport { BackendService } from './backend.service';\n/**\n * For Angular `HttpClient` simulate the behavior of a RESTy web api\n * backed by the simple in-memory data store provided by the injected `InMemoryDbService`.\n * Conforms mostly to behavior described here:\n * http://www.restapitutorial.com/lessons/httpmethods.html\n *\n * ### Usage\n *\n * Create an in-memory data store class that implements `InMemoryDbService`.\n * Call `config` static method with this service class and optional configuration object:\n * ```\n * // other imports\n * import { HttpClientModule } from '@angular/common/http';\n * import { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\n *\n * import { InMemHeroService, inMemConfig } from '../api/in-memory-hero.service';\n * @NgModule({\n *  imports: [\n *    HttpModule,\n *    HttpClientInMemoryWebApiModule.forRoot(InMemHeroService, inMemConfig),\n *    ...\n *  ],\n *  ...\n * })\n * export class AppModule { ... }\n * ```\n */\nexport declare class HttpClientBackendService extends BackendService implements HttpBackend {\n    private xhrFactory;\n    constructor(inMemDbService: InMemoryDbService, config: InMemoryBackendConfigArgs, xhrFactory: XhrFactory);\n    handle(req: HttpRequest<any>): Observable<HttpEvent<any>>;\n    protected getJsonBody(req: HttpRequest<any>): any;\n    protected getRequestMethod(req: HttpRequest<any>): string;\n    protected createHeaders(headers: {\n        [index: string]: string;\n    }): HttpHeaders;\n    protected createQueryMap(search: string): Map<string, string[]>;\n    protected createResponse$fromResponseOptions$(resOptions$: Observable<ResponseOptions>): Observable<HttpResponse<any>>;\n    protected createPassThruBackend(): HttpXhrBackend;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;;;;;;;;;;;;;AAYA;"}