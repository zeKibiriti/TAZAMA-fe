{"version":3,"file":"header.component.d.ts","sources":["D:/PROJECTS/TAZAMA/oprt-fe/node_modules/@swimlane/ngx-datatable/lib/components/header/header.component.d.ts"],"sourcesContent":["import { EventEmitter, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { SortType } from '../../types/sort.type';\nimport { SelectionType } from '../../types/selection.type';\nimport { DataTableColumnDirective } from '../columns/column.directive';\nexport declare class DataTableHeaderComponent implements OnDestroy {\n    private cd;\n    sortAscendingIcon: any;\n    sortDescendingIcon: any;\n    scrollbarH: boolean;\n    dealsWithGroup: boolean;\n    targetMarkerTemplate: any;\n    targetMarkerContext: any;\n    innerWidth: number;\n    sorts: any[];\n    sortType: SortType;\n    allRowsSelected: boolean;\n    selectionType: SelectionType;\n    reorderable: boolean;\n    dragEventTarget: any;\n    headerHeight: any;\n    columns: any[];\n    offsetX: number;\n    sort: EventEmitter<any>;\n    reorder: EventEmitter<any>;\n    resize: EventEmitter<any>;\n    select: EventEmitter<any>;\n    columnContextmenu: EventEmitter<{\n        event: MouseEvent;\n        column: any;\n    }>;\n    _columnsByPin: any;\n    _columnGroupWidths: any;\n    _innerWidth: number;\n    _offsetX: number;\n    _columns: any[];\n    _headerHeight: string;\n    _styleByGroup: {\n        [prop: string]: {};\n    };\n    private destroyed;\n    constructor(cd: ChangeDetectorRef);\n    ngOnDestroy(): void;\n    onLongPressStart({ event, model }: {\n        event: any;\n        model: any;\n    }): void;\n    onLongPressEnd({ event, model }: {\n        event: any;\n        model: any;\n    }): void;\n    readonly headerWidth: string;\n    trackByGroups(index: number, colGroup: any): any;\n    columnTrackingFn(index: number, column: any): any;\n    onColumnResized(width: number, column: DataTableColumnDirective): void;\n    onColumnReordered({ prevIndex, newIndex, model }: any): void;\n    onTargetChanged({ prevIndex, newIndex, initialIndex }: any): void;\n    getColumn(index: number): any;\n    onSort({ column, prevValue, newValue }: any): void;\n    calcNewSorts(column: any, prevValue: number, newValue: number): any[];\n    setStylesByGroup(): void;\n    calcStylesByGroup(group: string): any;\n}\n"],"names":[],"mappings":"AAAA;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;"}